code: source code, machine code, absolute code, source  code, machine  code, compiler code, assembly code, object code, object  code, interpretive code, micro code, relocatable code
 counter: program  counter, instruction  counter
 language: fourth  generation   language, algebraic   language, query  language, artificial  language, structured  programming  language, program  design  language, assembler  language, high  level  language, higher  order  language, design  language, algorithmic   language, block-structured  language, procedure-oriented  language, programming  language, fifth  generation   language, algorithmic   l i s t  processing  language, procedural  language, high  order  language, authoring  language, declarative  language, job  control  language, algebraic  language, rule-based  language, list  processing  language, control  language, unstratified  language, application-oriented  language, target  language, assembly   language, assembly  language, formal  language, algorithmic  language, interactive  language, object  language, specification  language, requirements  specification   language, logic  programming  language, machine  language, nonprocedural  language, stratified  language, computer  language, program  definition  language, source  language
assembler: absolute  assembler, relocating assembler, relocating  assembler, absolute assembler
 binding: dynamic  binding, static  binding
 testing: interface  testing, operational  testing, component  testing, development  testing, qualification  testing, branch  testing, module  testing, functional  testing, integration  testing, acceptance  testing, path  testing, performance  testing, unit  testing, structural  testing, integration   testing, glass-box  testing, statement  testing, system  testing, white-box  testing
computer   component: computer  program  component  (CPC), computer  software  component
graph: undirected graph, directed graph
configuration : configuration  control, configuration  status  accounting, configuration   identification
program: computer program, source program object module, source program, object program
staging stream: baseline staging stream
common : common  storage, common  area, common  block
 design: structured  design, data  structure-centered  design, object-oriented  design, architectural  design, functional  design
  : independent  verification  and  validation, verification  and  validation  (V&V)
 generator: code  generator, test  case  generator, application  generator, source  code  generator, test  generator, test  data  generator
input-process-output: input-process-output  chart, input-process-output chart
 decomposition: functional  decomposition, hierarchical  decomposition
entity type: associative entity type
 type: integer  type, enumeration  type, real  type, composite  type, atomic  type, logical  type, primitive  type, character  type
call  by : call  by  address, call  by  location, call  by  name, call  by  reference, call  by  value
item: critical item, configuration item
inspection: code  inspection, design  inspection
object : object  program, object  module
configuration management: global configuration management
software : software  repository, software  development   library
direct: direct instruction, direct  instruction, direct address
 analysis: static  analysis, transform  analysis, transaction  analysis, dynamic  analysis, transformation  analysis
jump: conditional jump, unconditional jump
design: data-structure-oriented design, architectural  design, detailed design, object-oriented design, function-oriented design, detailed  design, data structure-centered design, structured design, preliminary design, preliminary  design, functional design, architectural design
pass: forward pass, backward pass
 baseline: allocated  baseline, functional  baseline, product  baseline
 point: rescue  point, restart  point
product : product  baseline, product  configuration  identification
specification: functional specification, performance specification, interface requirements specification, requirements specification, requirements  specification, interface specification, formal   specification
absolute : absolute  address, absolute  assembler, absolute  code, absolute  loader, absolute  instruction
 control: change  control, configuration  control, interface  control
version: version  description  document
processing: background processing, foreground processing
modular: modular decomposition, modular  decomposition, modular programming, modular  programming
address: indexed  address, destination address, source address, relative  address, n -level address, indirect address, base  address, generated address, indirect  address, base address, two-level address, real address, self-relative address, symbolic  address, effective address, relative address, relocatable  address, absolute  address, effective  address, direct address, self-relative  address, indexed address, virtual  address, relocatable address, n -level  address, virtual address, symbolic address, n-level address, absolute address
change: engineering change, specification change notice
 machine: target  machine, host  machine
box: black box, black  box, glass box
compiler : compiler  generator, compiler  compiler
error : error  prediction, error  model, error  seeding
 breakpoint: dynamic  breakpoint, control  breakpoint, prolog  breakpoint, programmable  breakpoint, static  breakpoint, code  breakpoint, preamble  breakpoint, storage  breakpoint, epilog  breakpoint, postamble  breakpoint, data  breakpoint
 data: global  data, local  data
data  flow : data  flow  diagram, data  flow  graph
 entry: remote  batch  entry, remote  job  entry
call: call by name, call  by  value, call by reference
configuration item: software configuration item, hardware configuration item, computer software configuration item
criteria: exit criteria, acceptance criteria, pass/fail  criteria, test criteria, entry criteria, pass/fail criteria
scope: project scope, product scope
 coupling: control  coupling, pathological  coupling, data  coupling, common-  environment  coupling, common-environment  coupling, input-output  coupling, common-environment   content  coupling, content  coupling, common  coupling, hybrid  coupling
type: integer  type, enumeration  type, composite type, real  type, enumeration type, real type, character   type, logical  type, integer type, character type, atomic type, character  type, logical type
validity: link validity, validity summary
chief programmer: chief programmer team
 statement: control  statement, assignment  statement
cardinality: outer cardinality, inner cardinality, cardinality constraint
effort: apportioned effort, discrete effort
word: computer word, computer  word
 development: incremental  development, software  development  plan  (SDP)
control: change control, version control, configuration control, interface control
process: capable process, stable process, standard process, statistically managed process, performed process, managed process
attribute: quality  attribute
global configuration: global configuration management
absolute: absolute code, absolute assembler, absolute instruction, absolute address
redundancy: standby  redundancy, standby redundancy, active  redundancy, active redundancy, homogeneous redundancy, homogeneous  redundancy
recovery: backward recovery, forward recovery, forward  recovery, backward  recovery
machine: host machine (, target machine
ancestor: generic ancestor (of a class), generic ancestor, reflexive ancestor, reflexive ancestor (of a class)
parameter: adaptation  parameter
immediate : immediate  data, immediate  address, immediate  instruction
 management: configuration  management, software  configuration  management
abstraction: data abstraction
 recovery: forward  recovery, backward  recovery
diagram: entity-relationship diagram, program  structure  diagram, data structure diagram, entity-relationship (E-R) diagram, block  diagram, program structure diagram, box diagram, data flow diagram, block diagram
allocated : allocated  baseline, allocated  configuration   identification
 criteria: pass-fail  criteria, test  criteria, acceptance  criteria
 program: control  program, target  program, object  program, source  program, supervisory  program
lifecycle: lifecycle application, lifecycle tool
documentation: on-screen documentation, printed documentation, embedded documentation, separate documentation
 compaction: global  compaction, local  compaction
 variable: global  variable, local  variable, loop-control  variable, control  variable
 compiler: conversational  compiler, incremental  compiler, on-line  compiler, interactive  compiler
traceability: requirements traceability, bidirectional traceability
entity: dependent entity [key style], non-primary entity, entity subtype, independent entity, system entity, dependent entity, independent entity [key style]
design : design  specification, design  document, design  description
  language: fourth  generation  language  (4GL), third  generation  language  (3GL), high  order  language
monitor: execution  monitor, hardware  monitor, hardware monitor, software  monitor, software monitor
 stream: job  stream, run  stream
 seeding: bug  seeding, error  seeding
 computer: microprogrammed  computer, microprogrammable  computer
configuration control: configuration control board
 compression: lateral  compression, upward  compression, downward  compression
return: return code
 monitor: software  monitor, hardware  monitor
test  case: test  case  generator, test  case  specification
operation : operation  field, operation  part
interrupt: interrupt service routine, interrupt  service  routine, priority  interrupt, interrupt  priority, interrupt  latency, interrupt latency, interrupt mask, interrupt  mask, priority interrupt, interrupt priority
buffering: simple buffering, anticipatory buffering, dynamic buffering
workload: workload model
name: box name, function name
 efficiency: execution  efficiency, storage  efficiency
arrow: arrow segment, boundary arrow, internal arrow
 box: white  box, glass  box
configuration  control: configuration  control  board
 instruction: multiaddress  instruction, one-plus-one  address  instruction, four-address  instruction, single-address  instruction, absolute  instruction, zero-address  instruction, multiple-address  instruction, immediate  instruction, immediate   effective  instruction, two-address  instruction, three-plus-one  address  instruction, indirect  instruction, multiaddress   four-  two-address   address  instruction, single-operand  instruction, n -address  instruction, double-operand  instruction, n -plus-one  address  instruction, effective  instruction, one-  plus-one  address   address  instruction, one-address  instruction, two-plus-  one  address  instruction, direct  instruction, three-address  instruction
product: product line, product configuration identification, product family, product baseline
authoring : authoring  language, authoring  system
programmer: chief programmer, backup programmer, backup  programmer, chief programmer team
call by: call by name, call by value, call by reference
 generation  language: fourth  generation  language  (4GL), fifth  generation  language
computer : computer  resources, computer  resource  allocation
cause: special cause, common cause
foreground: foreground  processing, foreground processing
design review: system design review (SDR), preliminary design review, system design review, critical design review
loop : loop  invariant, loop  control, loop  body, loop  assertion
 addressing: repetitive  addressing, one-ahead  addressing
estimate: estimate to complete, estimate at completion
definition: data set definition, resource definition
language: stratified language, declarative language, assembly language, algebraic language, computer language, symbolic language, unstratified language, high-order language, rule-based language, interactive language, target language, requirements specification language, fifth-generation language, fourth-generation language, machine language, block-structured language, structured programming language, formal language, declarative  language, source language, algebraic  language, algorithmic language, high order language, requirements  specification  language, list  processing  language, programming language, nonprocedural language, procedural language, high order language (HOL), logic programming language, interactive  language, design language, application-oriented language, authoring language, query language, logic  programming  language, machine  language, list processing language, computer  language, natural language, specification language
 processing: foreground  processing, background  processing
correctness: proof of correctness, partial correctness, total correctness
 chart: structure  chart, hierarchy  chart
software  development : software  development  folder, software  development  notebook, software  development  file
origin: assembled origin, assembled  origin, loaded origin, loaded  origin
encoding: two-level encoding, single-level encoding
development cycle: system life cycle software development cycle, system development cycle
virtual : virtual  storage, virtual  memory
 loader: relative  loader, absolute  loader, relocating  loader
quality: quality control, quality assurance
management: source control management, change management, software configuration management, software release management, configuration management
 requirement: design  requirement, functional  requirement, performance  requirement, implementation  requirement, interface  requirement, physical  requirement
 assembler: absolute  assembler, relocating  assembler
data: data  structure  diagram, global data, data functions, local data, data type, data function, data flow diagram (DFD)
structured: structured design, structured  design, structured program
system: online documentation system, help system
 module: load  module, object  module
flow diagram: control flow diagram, data flow diagram
statement: control  statement, assignment  statement, assignment statement, control statement
relationship: nonintrinsic relationship, logical relationship, nonidentifying relationship [key style], precedence relationship, nonidentifying relationship, intrinsic relationship, identifying relationship
requirements review: system requirements review, software requirements review
immediate: immediate instruction, immediate data
execution : execution  time, execution  efficiency
subroutine: open subroutine, closed  subroutine, closed subroutine
instruction: direct instruction, four-address instruction, n-address instruction, instruction length, instruction format, zero-address instruction, instruction cycle, absolute instruction, n-plus-one address instruction, indirect instruction, four-address  instruction, multiaddress instruction, effective instruction, instruction time, three-address instruction, two-address  instruction, one-address  instruction, immediate instruction, one-address instruction, zero-address  instruction, two-address instruction
tree: specification tree, documentation tree
software   review: software  requirements  review, software  specification  review  (SSR)
 execution: backward  execution, reversible  execution, reverse  execution
 change: specification  change  notice  (SCN), engineering  change
 exception: protection  exception, overflow  exception, overflow   exception, operation  exception, addressing  exception, data  exception, underflow  exception
addressing: one-ahead addressing, repetitive addressing
argument: output argument, input argument
 dump: static  dump, change  dump, differential  dump, selective  dump, dynamic  dump, core  dump, memory  dump, snapshot  dump, postmortem  dump
conditional : conditional  branch, conditional  jump
 operation: single-step  operation, step-by-step  operation, overhead  operation, housekeeping  operation
resource allocation: computer resource allocation, dynamic resource allocation
trace: symbolic trace, logical trace, subroutine trace, selective trace, execution trace, retrospective trace, variable trace
object: object  program, object code, object  module, object module, object  code, object program
Identity Management: Simple Cloud Identity Management, System for Cross-domain Identity Management
chart: structure chart, input-process-output chart, bubble chart, input-process-output (IPO) chart
plan: project plan, development plan
breakpoint: code breakpoint, static breakpoint, data breakpoint, prolog breakpoint, programmable breakpoint, dynamic breakpoint, epilog breakpoint
class: collection-valued class, mutable class, immutable class, value class, state class, scalar-valued class
failure: hard failure, soft failure
flow: data flow, data  flow, control flow
hierarchical : hierarchical  decomposition, hierarchical  modeling
workspace: repository workspace
 manual: programmer  manual, operator  manual, diagnostic  manual, user  manual, support  manual, installation  manual, maintenance  manual
modular : modular  programming, modular  decomposition
assertion: inductive assertion method, output assertion, loop assertion, inductive assertion, input assertion
identification: allocated  configuration   identification
risk profile: project risk profile
report: test item transmittal report, test  incident  report, test report, test incident report, item  transmittal  report, test  report
compiler: root compiler, incremental compiler
test : test  driver, test  log, test  harness, test  case  specification, test  plan, test  script, test  procedure, test  incident  report, test  summary  report, test  item  transmittal  report, test  description, test  report
driven testing: data driven testing, keyword driven testing
common: common  storage
characteristic: data  characteristic, software  characteristic
 diagram: control  flow  diagram, data  structure  diagram, state  transition  diagram, entity-relationship  diagram, state  diagram, data  flow  diagram
kernel: security  kernel
requirement: design  requirement, performance requirement, design requirement, functional  requirement, physical requirement, performance  requirement, implementation  requirement, contractual requirement, functional   performance  requirement, interface requirement, product requirement, interface  requirement, physical  requirement, nonfunctional requirement, implementation requirement, functional requirement, derived requirement, customer requirement
dump: static  dump, snapshot dump, static dump, selective  dump, dynamic  dump, selective dump, change dump, memory  dump, postmortem dump, snapshot  dump, memory dump, dynamic dump, postmortem  dump
testing: component testing, performance testing, development testing, unit  testing, validation testing, functionality testing, system  testing, integration testing, interface  testing, formal testing, acceptance testing, integration  testing, branch testing, mutation testing, back-to-back  testing, functional testing, path testing, development  testing, security testing, alpha testing, qualification testing, acceptance  testing, performance  testing, back-to-back testing, structural  testing, operational testing, informal testing, system testing, component  testing, beta testing, structural testing, interface testing, statement testing
entity-relationship : entity-relationship  (E-R)  map, entity-relationship  diagram
module: object module, object  module, load module
computer: computer resource allocation, microprogrammable computer, microprogrammed computer, computer resources
result: execution result, expected result
fail: fail safe, fail soft
calendar: resource calendar, project calendar
 code: specific  code, relocatable  code, status  code, absolute  code, condition  code, interpretive  code, machine  code, assembly  code, assembler  code, operation  code, compiler  code, op  code  (opcode)
capacity: memory capacity, channel capacity, channel  capacity, storage capacity, memory  capacity
review: design review, design  review, formal  qualification  review, requirements review, test readiness review, formal qualification review, requirements  review, code review, test  readiness  review
state: supervisor state, problem state
sample instance: sample instance table, sample instance diagram
tolerance: error tolerance, fault tolerance
 design : program  design   (PDL), hardware  design  language
 storage: virtual  storage, multilevel  storage, real  storage
 library: system  library, software  library, production  library, software  development   library, master  library, program  library
efficiency: execution efficiency, storage efficiency, execution  efficiency, storage  efficiency
incident: software  test  incident, software test incident
key: primary key, foreign key
interface: interface design document, interface requirements specification (IRS), interface requirements specification
configuration: configuration item; form, configuration identification, configuration management, configuration audit, global configuration, local configuration, configuration index, configuration context, configuration item development record, configuration status accounting, project area configuration, configuration provider, configuration control, configuration specification, configuration item
  review: test  readiness  review  (TRR), formal  qualification  review  (FQR), formal  qualification  review, test  readiness  review
limits: specification limits, control limits
fault: program-sensitive fault, fault secure, fault  tolerance, data-sensitive fault, fault masking, fault tolerance
job: job stream, job control language, job step, job  step, job  control  language, job  stream
 address: relocatable  address, indexed  address, multilevel  address, indirect  address, destination  address, absolute  address, machine  address, generated  address, direct  address, base  address, symbolic  address, source  address, self-relative  address, one-level  address, synthetic  address, relative  address, specific  address
 cycle: development  life  cycle, system  development  cycle, software  development  cycle, system  life  cycle, life  cycle, software  life  cycle, development  cycle
functional : functional  baseline, functional  configuration   identification
point: reentry  point, entry point, reentry point
period: wearout-failure period, early-failure period, constant-failure period
loader: relocating  loader, relocating loader, absolute loader, absolute  loader, linking loader
clash: order clash, order  clash, structure clash
interrupt : interrupt  priority, interrupt  latency
allocated: allocated configuration identification, allocated baseline
source statement: logical source statement, physical source statement
engineering change: engineering change proposal
acceptance: acceptance test, acceptance testing
 period: early-failure  period, wearout-failure  period, burn-in  period, constant-failure  period
responsibility: class-level responsibility, instance-level responsibility
 requirements  review: software  requirements  review, system  requirements  review  (SRR)
chief  programmer: chief  programmer  team
maintenance: perfective  maintenance, perfective maintenance, adaptive  maintenance, corrective maintenance, software  maintenance, corrective  maintenance, adaptive maintenance
diversity: software  diversity, software diversity
 capacity: channel  capacity, memory  capacity, storage  capacity
test  procedure: test  procedure  specification
 construct: monadic  selective  construct, dyadic  selective  construct
external: external inquiry, external output, external input
configuration identification: product configuration identification functional baseline, allocated configuration identification, functional configuration identification, product configuration identification
design language: hardware design language, program design language
exception: protection  exception, protection exception, overflow  exception, addressing exception, data exception, operation exception, operation  exception, underflow exception, overflow exception, data  exception, underflow  exception
 trace: data  trace, symbolic  trace, code  trace, retrospective  trace, data  flow  trace, variable  trace, call  trace, execution  trace, subroutine  trace, control  flow  trace
value: quality factor value, metric value
 allocation: contiguous  allocation, storage  allocation, dynamic  resource  allocation, dynamic  allocation, computer  resource  allocation
error: semantic error, dynamic  error, syntactic error, dynamic error, error seeding, indigenous  error, static  error, error model, static error, transient  error, syntactic  error, error prediction, fatal  error, semantic  error
 error: transient  error, soft  error, syntax  error, syntactic  error, semantic  error
property: single-valued property, scalar-valued property, collection-valued property, multi-valued property
loop: loop  control, loop body, loop  body, loop control
critical path: critical path methodology
metric: quality  metric, software quality metric
working : working  storage, working  space, working  area
binding: dynamic  binding, dynamic binding, static binding
 microinstruction: horizontal  microinstruction, vertical  microinstruction, diagonal  microinstruction
cluster: incomplete cluster, total cluster, partial cluster
Database Connectivity: Open Database Connectivity, Java Database Connectivity
selective construct: monadic selective construct, dyadic selective construct
baseline: functional baseline, allocated baseline, allocated  baseline, product baseline, product  baseline, functional  baseline
recursion: simultaneous recursion, simultaneous  recursion
 programmer: chief  programmer  team, backup  programmer, chief  programmer
Open Services: Open Services for Lifecycle Collaboration
driver: test driver
allocation: computer resource allocation, storage allocation, contiguous allocation
user: user documentation, user manual
 board: configuration  control  board, change  control  board
cycle: software  development  cycle, software  life  cycle, software development cycle, software life cycle
audit: physical  configuration  audit, functional  configuration  audit
 design  review: system  design  review  (SDR), critical  design  review, preliminary  design  review
analysis: transform analysis, transaction analysis, static analysis, static analysis demonstration, dynamic analysis
authoring: authoring language, authoring system
model: system model, system  model, static model, spiral model, dynamic model, workload model, waterfall model
 interface: human-machine  interface  (HMI), user  interface, man-machine  interface  (MMI)
configuration audit: physical configuration audit, functional configuration audit
 correctness: partial  correctness, total  correctness
repeatability: test  repeatability
 flow: data  flow, control  flow
mixed : mixed  mode, mixed  type
 time: think  time, mean  time  between  failures  (MTBF), overhead  time, response  time, set-up  time, running  time, standby  time, up  time, down  time, turnaround  time, mean  time  to  repair  (MTTR), execution  time, idle  time, port-to-port  time, busy  time
pseudo : pseudo  operation, pseudo  instruction
web: web app, web application
engineering  change: engineering  change  proposal
quality : quality  factor, quality  attribute, quality  assurance  (QA), quality  control
format: instruction format, address format
read: nondestructive read, nondestructive  read, destructive read, destructive  read
 graph: undirected  graph, directed  graph
microinstruction: diagonal microinstruction, vertical microinstruction, horizontal microinstruction
address instruction: three-plus-one address instruction, n-plus-one address instruction, two-plus-one address instruction, one-plus-one address instruction, four-plus-one address instruction
compaction: global  compaction, global compaction, local compaction, local  compaction
background: background  processing
address : address  part, address  field
execution: execution efficiency, execution time
 read: nondestructive  read, destructive  read
manual: installation manual, programmer manual, maintenance manual, operator manual, user manual, diagnostic manual, support manual
 modeling: hierarchical  modeling
 report: test  item  transmittal  report, test  report, test  incident  report, test  summary  report
backlog: product backlog
 fault: data-sensitive  fault, program-sensitive  fault, pattern-sensitive  fault
back: back linking, back link
library: production library, software  library, system library, macro library, software development library, master library
prototyping: rapid  prototyping, rapid prototyping
indirect: indirect instruction, indirect address
 software: application  software, support  software, system  software
 origin: assembled  origin, loaded  origin
requirements specification: software requirements specification, system requirements specification
decision: leading decision UNTIL, leading decision, trailing decision
decomposition: hierarchical decomposition, modular decomposition, functional decomposition, modular  decomposition
mutation: program  mutation
programming language: nonprocedural programming language, procedural programming language
run: run time, run  t i m e
schedule: master schedule, milestone schedule
 specification: test  case  specification, development  specification, test  specification, requirements  specification, functional   specification, performance  specification
 review: requirements  review, test  readiness  review, design  review, formal  qualification  review, code  review
agreement: semantic agreement, syntactic agreement
subroutine trace: 
compatible: upward compatible, downward compatible
of accounts: code of accounts, chart of accounts
 buffering: dynamic  buffering, simple  buffering, anticipatory  buffering
software: application  software, support software, application software, software development library, system software, software repository, system  software, support  software
 audit: physical  configuration  audit, configuration  audit, functional  configuration  audit
 subroutine: direct  insert  subroutine, open  subroutine
float: free float, total float
state class: independent state class, dependent state class
 model: error  prediction  model, waterfall  model, error  model, spiral  model
test  : test  case  specification, test  summary  report
compression: downward compression, upward compression, lateral compression
developmental : developmental  configuration, developmental  baseline
submit: termination submit, invocation submit
editor: text  editor
 assertion: input  assertion, inductive  assertion  method, output  assertion, loop  assertion
 maintenance: perfective  maintenance, adaptive  maintenance, corrective  maintenance
 field: operation  field, address  field, operator  field
link: incoming link, outgoing link, content link, trace link
 tolerance: fault  tolerance, error  tolerance
assessment: assessment record, assessment output
and validation: verification and validation, independent verification and validation
paging: anticipatory paging, anticipatory  paging, demand paging, demand  paging
constant: variable figurative constant, figurative  constant
 cohesion: logical  cohesion, functional  cohesion, coincidental  cohesion, temporal  cohesion, sequential  cohesion, coincidental   communicational  cohesion, procedural  cohesion, communicational  cohesion
engineering: systems engineering, reverse engineering, hardware engineering, software engineering, inverse engineering
nonidentifying relationship: optional nonidentifying relationship nonidentifying relationship [key style], optional nonidentifying relationship, mandatory nonidentifying relationship
file: XML data configuration file, XDC file, external interface file, internal logical file
 configuration  audit: physical  configuration  audit  (PCA), functional  configuration  audit, physical  configuration  audit, functional  configuration  audit  (FCA)
storage: virtual storage, real  storage, real storage
virtual: virtual storage, virtual address, virtual  address
field: operation field, address field, address  field
call : call  tree, call  graph
test: test case specification, test item transmittal report, test  case  specification, test  incident  report, test  plan, test plan, test  procedure, test report, test log, test procedure, test  item  transmittal  report, test  log, test  report
roll: roll in, roll out
 state: slave  state, supervisor  state, privileged  state, master  state, problem  state
variable: global variable, local variable
coupling: content coupling, pathological coupling, data  coupling, pathological  coupling, control  coupling, common-  environment  coupling, control coupling, common-environment coupling, hybrid coupling, data coupling, content  coupling
mask: interrupt mask, interrupt  mask
cohesion: procedural cohesion, temporal cohesion, functional cohesion, sequential cohesion, communicational cohesion, coincidental cohesion, logical cohesion
time: turnaround time, port-to-port time, turnaround  time, response  time, set-up  time, set-up time, mean time between failures, run time, up  time, idle time, think  time, down  time, response time, idle  time, mean time to repair, down time, execution time, think time, up time, setup time, port-to-port  time, busy time, execution  time, busy  time
 assurance: quality  assurance, software  quality  assurance
 failure: soft  failure, hard  failure
